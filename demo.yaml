# Where the samples will be written
save_data: data/demo

# Training files
data:
    corpus_1:
        path_src: data/train_src.txt
        path_tgt: data/train_tgt.txt
        transforms: [filtertoolong]
    valid:
        path_src: data/valid_src.txt
        path_tgt: data/valid_tgt.txt
        transforms: [filtertoolong]

# Vocabulary files, generated by onmt_build_vocab
src_vocab: data/vocab/example.vocab.src
tgt_vocab: data/vocab/example.vocab.tgt

# Vocabulary size - should be the same as in sentence piece
src_vocab_size: 50000
tgt_vocab_size: 50000

# Filter out source/target longer than n if [filtertoolong] enabled
src_seq_length: 150
src_seq_length: 150

# Where to save the log file and the output models/checkpoints

save_model: data/demo/en-zh.model

# Stop training if it does not improve after n validations
early_stopping: 4

# Default: 5000 - Save a model checkpoint for each n
save_checkpoint_steps: 1000

# To save space, limit checkpoints to last n
# keep_checkpoint: 3

seed: 3435

# Default: 100000 - Train the model to max n steps
# Increase to 200000 or more for large datasets
# For fine-tuning, add up the required steps to the original steps
train_steps: 10000

# Default: 10000 - Run validation after n steps
valid_steps: 1000

# Default: 4000 - for large datasets, try up to 8000
warmup_steps: 500
report_every: 100

# Number of GPUs, and IDs of GPUs
world_size: 1
gpu_ranks: [0]

# Batching
bucket_size: 262144
num_workers: 0  # Default: 2, set to 0 when RAM out of memory
batch_type: "tokens"
batch_size: 2048   # Tokens per batch, change when CUDA out of memory
valid_batch_size: 1024
max_generator_batches: 2
accum_count: [2]
accum_steps: [1]

# Optimization
model_dtype: "fp16"
optim: "adam"
learning_rate: 1.0  # Reduced for smaller memory
# warmup_steps: 8000
decay_method: "noam"
adam_beta2: 0.998
max_grad_norm: 0
label_smoothing: 0.1
param_init: 0
param_init_glorot: true
normalization: "tokens"

# Model
encoder_type: transformer
decoder_type: transformer
position_encoding: true
enc_layers: 4  # Reduced for smaller memory
dec_layers: 4  # Reduced for smaller memory
heads: 8
hidden_size: 512
word_vec_size: 512
transformer_ff: 2048
dropout_steps: [0]
dropout: [0.1]
attention_dropout: [0.1]
